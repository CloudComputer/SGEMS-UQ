import sgems

# 1. The output path of where to store the generated facies models
path = '/home/lewisli/Desktop/WCA/Generated Models/'

# Load project files
sgems.execute("LoadProject \
/home/lewisli/Desktop/WCA/InitialData/InitialData.prj/")

sgems.execute("ClearPropertyValueIf ProbacubeLess::ProbacubeLess_PCAChanProb::-996660000::-10000")
sgems.execute("ClearPropertyValueIf ProbacubeLess::ProbacubeLess_PCALevProb::-996660000::-10000")
sgems.execute("ClearPropertyValueIf ProbacubeLess::ProbacubeLess_PCAPoorLevProb::-996660000::-10000")
sgems.execute("ClearPropertyValueIf ProbacubeLess::ProbacubeLess_PCAShaleProb::-996660000::-10000")

sgems.execute("ClearPropertyValueIf ProbacubeMore::ProbacubeMore_PCAChanProb::-996660000::-10000")
sgems.execute("ClearPropertyValueIf ProbacubeMore::ProbacubeMore_PCALevProb::-996660000::-10000")
sgems.execute("ClearPropertyValueIf ProbacubeMore::ProbacubeMore_PCAPoorLevProb::-996660000::-10000")
sgems.execute("ClearPropertyValueIf ProbacubeMore::ProbacubeMore_PCAShaleProb::-996660000::-10000")

sgems.execute("ClearPropertyValueIf Probacubes::Probacubes_PCAChanProb::-996660000::-10000")
sgems.execute("ClearPropertyValueIf Probacubes::Probacubes_PCALevProb::-996660000::-10000")
sgems.execute("ClearPropertyValueIf Probacubes::Probacubes_PCAPoorLevProb::-996660000::-10000")
sgems.execute("ClearPropertyValueIf Probacubes::Probacubes_PCAShaleProb::-996660000::-10000")

# Part 1: Run Snesim to generate facies realizations
#TI_for_Study = ["TI1","TI2","TI3"]  # TI used for the current study
TI_for_Study = ["TI1","TI2","TI3"]  # TI used for the current study
seed = 125622
facies_name=["NTG"]
Pcube_name = ["Probacubes","ProbacubeLess",
"ProbacubeMore"]  # name of the probability cube to be employed (1st one should be used by default)
Pcube_prop = ['PCAChanProb','PCALevProb','PCAPoorLevProb',
'PCAShaleProb']  # properties described by the probability cubes
Prj_name='InitialData.prj'  # Name of the initial project (containing TIs, probability maps, well data)
NewPrj_name="WCA_Realizations.prj"  # Output project

Nbreal=3  # Number of model generated by combination of TI and probamaps

dataTemplate = 70

StartNumFile = 0
fileprefix="TI"
Angle=0

nx = '78'
ny = '59'
nz = '116'
count = 0

sgems.execute('NewCartesianGrid  temp::'+nx+'::'+ny+'::'+nz+'::1.0::1.0::1.0::0::0::0')
for i in range(len(TI_for_Study)):
    NameTi = TI_for_Study[i]
    real_to_save = '::'
        
    sgems.execute('RunGeostatAlgorithm snesim_std::/GeostatParamUtils/XML:: \
    <parameters>  \
    <algorithm name="snesim_std" /> \
    <GridSelector_Sim  value="'+NameTi+'"  />  \
    <Property_Name_Sim  value="'+facies_name[0]+'" />    \
    <Nb_Realizations  value="'+str(Nbreal)+'" />  \
    <Seed  value="'+str(seed)+'" /> \
    <PropertySelector_Training  grid="'+NameTi+'"   property="facies "  /> \
    <Nb_Facies  value="4" />     \
    <Marginal_Cdf  value="0.52 0.10 0.10 0.28 " />    \
    <Max_Cond  value="'+str(dataTemplate)+'" />     \
    <Search_Ellipsoid  value="75 75 10  0 0 0" />    \
    <Hard_Data  grid="wells"   property="facies"  />    \
    <Use_ProbField  value="0"  />     \
    <ProbField_properties count="" value=""  /> \
    <TauModelObject  value="" />     \
    <VerticalPropObject  value=""  />     \
    <VerticalProperties count="0"   value="" />     \
    <Use_Affinity  value="0"  />   \
    <Use_Rotation  value="0"  />    \
    <Cmin  value="1" />     \
    <Constraint_Marginal_ADVANCED  value="0.75" /> \
    <resimulation_criterion  value="-1" />    \
    <resimulation_iteration_nb  value="1" />   \
    <Nb_Multigrids_ADVANCED  value="4" />    \
    <Debug_Level  value="0" />     \
    <Subgrid_choice  value="1"  />     \
    <Previously_simulated  value="4" />     \
    <expand_isotropic  value="1"  />     \
    <expand_anisotropic  value="0"  />    \
    <aniso_factor  value="      " />      \
    <Region_Indicator_Prop  value="facies "  />  \
    <Active_Region_Code  value="" />   \
    <Use_Previous_Simulation  value="0"  />   \
    <Use_Region  value="0"  /> \
    </parameters>')

    for j in range(Nbreal):
        count = count +1
        currentpath = path+'FaciesModel/' +'real'+str(count)+'_'+NameTi
        print currentpath
        real_to_save = real_to_save+facies_name[0]+'__real'+str(j)+'::'
        cpStr = 'CopyProperty '+NameTi+'::'+facies_name[0]+'__real'+str(j)+'::temp::facies::0::0'
        sgems.execute(cpStr)
        filename='R'+str(j)+'_'+facies_name[0]+'_facies.out::gslib'
        sgems.execute('SaveGeostatGrid  temp::'+currentpath+filename+'::0')
